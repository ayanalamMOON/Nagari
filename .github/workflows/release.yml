name: Release Binaries

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  release:
    name: Release Windows Binaries
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v4

    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        target: x86_64-pc-windows-msvc
        override: true

    - name: Build binaries
      run: |
        cargo build --release --target x86_64-pc-windows-msvc --bin nag
        cargo build --release --target x86_64-pc-windows-msvc --bin nagari-lsp || echo "nagari-lsp build failed"
        cargo build --release --target x86_64-pc-windows-msvc --bin nagari-registry || echo "nagari-registry build failed"
        cargo build --release --target x86_64-pc-windows-msvc --bin nagc || echo "nagc build failed"
        cargo build --release --target x86_64-pc-windows-msvc --bin nagrun || echo "nagrun build failed"

    - name: Create release directory
      run: mkdir release

    - name: Package binaries
      shell: cmd
      run: |
        copy "target\x86_64-pc-windows-msvc\release\nag.exe" "release\nag-windows.exe" 2>nul || echo nag not found
        copy "target\x86_64-pc-windows-msvc\release\nagari-lsp.exe" "release\nagari-lsp-windows.exe" 2>nul || echo nagari-lsp not found
        copy "target\x86_64-pc-windows-msvc\release\nagari-registry.exe" "release\nagari-registry-windows.exe" 2>nul || echo nagari-registry not found
        copy "target\x86_64-pc-windows-msvc\release\nagc.exe" "release\nagc-windows.exe" 2>nul || echo nagc not found
        copy "target\x86_64-pc-windows-msvc\release\nagrun.exe" "release\nagrun-windows.exe" 2>nul || echo nagrun not found

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: nagari-windows-binaries
        path: release/

  create-release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: release
    if: startsWith(github.ref, 'refs/tags/')
    permissions:
      contents: write

    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4

    - name: Create release
      uses: softprops/action-gh-release@v1
      with:
        files: nagari-windows-binaries/*
        draft: false
        prerelease: false
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
