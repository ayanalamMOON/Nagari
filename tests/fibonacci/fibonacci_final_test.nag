def fibonacci_recursive(n: int) -> int:
    if n <= 1:
        return n
    else:
        return fibonacci_recursive(n - 1) + fibonacci_recursive(n - 2)

def fibonacci_iterative(n: int) -> int:
    if n <= 1:
        return n

    a = 0
    b = 1
    i = 2
    while i <= n:
        temp = a + b
        a = b
        b = temp
        i = i + 1
    return b

def test_basic_cases():
    print("=== Fibonacci Test Suite ===")
    print("")

    print("Testing basic cases:")

    result0 = fibonacci_recursive(0)
    if result0 == 0:
        print("PASS: fibonacci(0) = 0")
    else:
        print("FAIL: fibonacci(0) = " + str(result0))

    result1 = fibonacci_recursive(1)
    if result1 == 1:
        print("PASS: fibonacci(1) = 1")
    else:
        print("FAIL: fibonacci(1) = " + str(result1))

    result2 = fibonacci_recursive(2)
    if result2 == 1:
        print("PASS: fibonacci(2) = 1")
    else:
        print("FAIL: fibonacci(2) = " + str(result2))

    result3 = fibonacci_recursive(3)
    if result3 == 2:
        print("PASS: fibonacci(3) = 2")
    else:
        print("FAIL: fibonacci(3) = " + str(result3))

    result5 = fibonacci_recursive(5)
    if result5 == 5:
        print("PASS: fibonacci(5) = 5")
    else:
        print("FAIL: fibonacci(5) = " + str(result5))

    result10 = fibonacci_recursive(10)
    if result10 == 55:
        print("PASS: fibonacci(10) = 55")
    else:
        print("FAIL: fibonacci(10) = " + str(result10))

def test_iterative_vs_recursive():
    print("")
    print("Testing iterative vs recursive:")

    n = 8
    recursive_result = fibonacci_recursive(n)
    iterative_result = fibonacci_iterative(n)

    print("fibonacci(" + str(n) + ") recursive: " + str(recursive_result))
    print("fibonacci(" + str(n) + ") iterative: " + str(iterative_result))

    if recursive_result == iterative_result:
        print("PASS: Both implementations agree")
    else:
        print("FAIL: Implementations disagree")

def test_larger_numbers():
    print("")
    print("Testing larger numbers with iterative:")

    result15 = fibonacci_iterative(15)
    print("fibonacci(15) = " + str(result15))
    if result15 == 610:
        print("PASS: fibonacci(15) = 610")
    else:
        print("FAIL: fibonacci(15) expected 610")

    result20 = fibonacci_iterative(20)
    print("fibonacci(20) = " + str(result20))
    if result20 == 6765:
        print("PASS: fibonacci(20) = 6765")
    else:
        print("FAIL: fibonacci(20) expected 6765")

def main():
    test_basic_cases()
    test_iterative_vs_recursive()
    test_larger_numbers()
    print("")
    print("Fibonacci testing completed!")

main()
