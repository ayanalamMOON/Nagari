def fibonacci_recursive(n):
    if n <= 0:
        return 0
    if n == 1:
        return 1
    return fibonacci_recursive(n - 1) + fibonacci_recursive(n - 2)

def fibonacci_iterative(n):
    if n <= 0:
        return 0
    if n == 1:
        return 1
    
    a = 0
    b = 1
    i = 2
    while i <= n:
        temp = a + b
        a = b
        b = temp
        i = i + 1
    
    return b

def main():
    print("Fibonacci Series Test in Nagari")
    print("=================================")
    
    print("Testing both recursive and iterative implementations:")
    print()
    
    # Test numbers 0 through 10
    i = 0
    while i <= 10:
        rec_result = fibonacci_recursive(i)
        iter_result = fibonacci_iterative(i)
        
        status = "FAIL"  # default value
        if rec_result == iter_result:
            status = "PASS"
            
        print("fibonacci(" + str(i) + ") -> Recursive:", rec_result, "| Iterative:", iter_result, "| Status:", status)
        i = i + 1
    
    print()
    print("Testing larger values (iterative only for performance):")
    
    large_values = [15, 20, 25, 30]
    j = 0
    while j < 4:
        n = large_values[j]
        result = fibonacci_iterative(n)
        print("fibonacci(" + str(n) + ") =", result)
        j = j + 1
    
    print()
    print("Fibonacci sequence (first 15 numbers):")
    sequence = []
    k = 0
    while k < 15:
        sequence.push(fibonacci_iterative(k))
        k = k + 1
    
    print(sequence)
    print()
    print("All tests completed successfully!")

main()
