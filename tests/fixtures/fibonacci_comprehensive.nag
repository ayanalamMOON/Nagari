def fibonacci_recursive(n):
    if n <= 0:
        return 0
    if n == 1:
        return 1
    return fibonacci_recursive(n - 1) + fibonacci_recursive(n - 2)

def fibonacci_iterative(n):
    if n <= 0:
        return 0
    if n == 1:
        return 1
    
    a = 0
    b = 1
    i = 2
    while i <= n:
        temp = a + b
        a = b
        b = temp
        i = i + 1
    
    return b

def main():
    print("Fibonacci Series Test - Comparing Recursive vs Iterative")
    print("=" * 55)
    
    # Test small numbers
    print("Testing small numbers (0-10):")
    i = 0
    while i <= 10:
        rec_result = fibonacci_recursive(i)
        iter_result = fibonacci_iterative(i)
        if rec_result == iter_result:
            match = "✓"
        else:
            match = "✗"
        print("n =", i, "| Recursive:", rec_result, "| Iterative:", iter_result, "|", match)
        i = i + 1
    
    print()
    print("Testing larger numbers:")
    
    # Test larger numbers where recursive becomes slow
    test_values = [15, 20, 25]
    j = 0
    while j < 3:
        n = test_values[j]
        print("Computing fibonacci(" + str(n) + ")...")
        
        iter_result = fibonacci_iterative(n)
        print("  Iterative result:", iter_result)
        
        if n <= 20:
            rec_result = fibonacci_recursive(n)
            print("  Recursive result:", rec_result)
            if rec_result == iter_result:
                match = "✓"
            else:
                match = "✗"
            print("  Match:", match)
        else:
            print("  (Skipping recursive for n >20 due to performance)")
        
        print()
        j = j + 1
    
    print("Fibonacci sequence verification (first 15 numbers):")
    sequence_str = ""
    k = 0
    while k < 15:
        if k > 0:
            sequence_str = sequence_str + ", "
        sequence_str = sequence_str + str(fibonacci_iterative(k))
        k = k + 1
    print(sequence_str)
    
    print()
    print("Test completed successfully! ✓")

main()
