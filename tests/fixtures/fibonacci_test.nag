def fibonacci_recursive(n):
    """Calculate the nth Fibonacci number using recursion"""
    if n <= 0:
        return 0
    elif n == 1:
        return 1
    else:
        return fibonacci_recursive(n - 1) + fibonacci_recursive(n - 2)

def fibonacci_iterative(n):
    """Calculate the nth Fibonacci number using iteration"""
    if n <= 0:
        return 0
    elif n == 1:
        return 1
    
    a = 0
    b = 1
    i = 2
    while i <= n:
        temp = a + b
        a = b
        b = temp
        i = i + 1
    
    return b

def test_fibonacci():
    """Test the Fibonacci implementations"""
    print("Testing Fibonacci implementations...")
    
    # Test individual cases
    print("Testing recursive implementation:")
    print("fibonacci_recursive(0) =", fibonacci_recursive(0))
    print("fibonacci_recursive(1) =", fibonacci_recursive(1))
    print("fibonacci_recursive(2) =", fibonacci_recursive(2))
    print("fibonacci_recursive(3) =", fibonacci_recursive(3))
    print("fibonacci_recursive(4) =", fibonacci_recursive(4))
    print("fibonacci_recursive(5) =", fibonacci_recursive(5))
    print("fibonacci_recursive(6) =", fibonacci_recursive(6))
    print("fibonacci_recursive(7) =", fibonacci_recursive(7))
    
    print("Testing iterative implementation:")
    print("fibonacci_iterative(0) =", fibonacci_iterative(0))
    print("fibonacci_iterative(1) =", fibonacci_iterative(1))
    print("fibonacci_iterative(2) =", fibonacci_iterative(2))
    print("fibonacci_iterative(3) =", fibonacci_iterative(3))
    print("fibonacci_iterative(4) =", fibonacci_iterative(4))
    print("fibonacci_iterative(5) =", fibonacci_iterative(5))
    print("fibonacci_iterative(6) =", fibonacci_iterative(6))
    print("fibonacci_iterative(7) =", fibonacci_iterative(7))
    
    # Test larger number
    print("Performance comparison (fibonacci(15)):")
    n = 15
    result_iterative = fibonacci_iterative(n)
    result_recursive = fibonacci_recursive(n)
    print("Iterative result:", result_iterative)
    print("Recursive result:", result_recursive)
    
    if result_iterative == result_recursive:
        print("✓ Results match!")
    else:
        print("✗ Results don't match!")

def main():
    """Main function to run the Fibonacci tests"""
    print("Fibonacci Series Test in Nagari")
    print("========================================")
    
    test_fibonacci()
    
    print("========================================")
    print("Test completed!")

if __name__ == "__main__":
    main()
