def fibonacci_recursive(n: int) -> int:
    if n <= 1:
        return n
    else:
        return fibonacci_recursive(n - 1) + fibonacci_recursive(n - 2)

def fibonacci_iterative(n: int) -> int:
    if n <= 1:
        return n

    a = 0
    b = 1
    i = 2
    while i <= n:
        temp = a + b
        a = b
        b = temp
        i = i + 1
    return b

def test_implementations():
    test_inputs = [0, 1, 2, 3, 4, 5]
    test_expected = [0, 1, 1, 2, 3, 5]

    print("Testing implementations...")

    for i in range(len(test_inputs)):
        n = test_inputs[i]
        expected = test_expected[i]

        result_recursive = fibonacci_recursive(n)
        result_iterative = fibonacci_iterative(n)

        print("fib(" + str(n) + ") = " + str(result_iterative))

test_implementations()
