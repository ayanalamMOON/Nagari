def fibonacci_recursive(n: int) -> int:
    if n <= 1:
        return n
    else:
        return fibonacci_recursive(n - 1) + fibonacci_recursive(n - 2)

def fibonacci_iterative(n: int) -> int:
    if n <= 1:
        return n
    a = 0
    b = 1
    i = 2
    while i <= n:
        temp = a + b
        a = b
        b = temp
        i = i + 1
    return b

def fibonacci_optimized(n: int) -> int:
    if n <= 1:
        return n
    if n == 2:
        return 1
    prev2 = 0
    prev1 = 1
    current = 1
    i = 3
    while i <= n:
        prev2 = prev1
        prev1 = current
        current = prev1 + prev2
        i = i + 1
    return current

# Simple test
print("Testing basic functions:")
print("fib_recursive(5):", fibonacci_recursive(5))
print("fib_iterative(5):", fibonacci_iterative(5))
print("fib_optimized(5):", fibonacci_optimized(5))
